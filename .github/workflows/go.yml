name: Go Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Go Application for Windows x64
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install dependencies
      run: go mod tidy

    - name: Build for Windows x64
      run: |
        go build -ldflags="-H windowsgui" -o ArishtiOverflow-windows-amd64.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ArishtiOverflow-windows-amd64
        path: ArishtiOverflow-windows-amd64.exe

    - name: Generate Tag
      id: generate_tag
      run: |
        echo "v1.0.${{ github.run_number }}" > tag.txt
      continue-on-error: false

    - name: Read tag from file
      id: read_tag
      run: echo "tag=$(cat tag.txt)" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.tag }}
        release_name: "Release ${{ env.tag }}"
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ArishtiOverflow-windows-amd64.exe
        asset_name: ArishtiOverflow-windows-amd64.exe
        asset_content_type: application/octet-stream
